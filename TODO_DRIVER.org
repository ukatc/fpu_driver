
* DONE Design questions

** DONE subobjects for CAN gateways
** DONE command protocol

** DONE naming of classes
- class for CAN Bus level object GatewayDriver
- class for whole grid of FPUs GridDriver (to avoid clash with Python library)

* DONE code CAN driver

** DONE file preamble
** DONE write class skeleton
- [X] add members
  - [X] state array
  - [X] struct: ready, pending and error counters
  - [X] socket
  - [X] read and write buffers
  - [X] condition variable
  - [X] state mutex
  - [X] sending and receiving threads


- [X] initialisation / constructor / destructor code
  - [X] state array
  - [X] struct: ready, pending and error counters
  - [X] socket
  - [X] read and write buffers
  - [X] condition variable
  - [X] state mutex
  - [X] sending and receiving threads

- [X] state enumeration
** DONE handle byte stuffing better
** DONE socket handling using poll()

** DONE define E_GridState enumeration

** DONE define some Error codes for CAN driver
** DONE look up timing functions
** DONE split off code thread-safe FPUStates Array
*** DONE getGridState method
*** DONE waitForState method
*** DONE getNextTimeOut method
*** DONE CommandID submember
*** DONE state counters
*** DONE addTimeOut method
*** DONE clearTimeOut method
*** DONE Fix wait states and error fields
*** DONE bind result into receive loop
*** DONE write FPUArray::process_timeouts()
*** DONE fix time_spec functions and signatures
** DONE code thread-safe CommandQueue
*** DONE waitForCommand method
*** DONE getCommandMask
*** DONE pushCommand method
*** DONE popCommand method
** DONE define time quantization
** DONE Set grid state on disconnect, and signal to Wait()
** DONE Normalize timespecs (set_normalized_timespec, -> 
time_spec_add_safe), also  use TIME_T_MAX from time.h)
** DONE Base CommandQueue length on NUMFPUS * 256, 
  for the wavetable loading
** DONE Define two enums for the CAN driver:
 one for the driver state, and one for 
 the last error
** DONE command interface (draft)
** DONE command serialisation
- [ ] does that need a class and interface?
** DONE response handler interface
*** DONE read Pablo's sample for hints
*** DONE ask Pablo about sync0 and sync1
*** DONE read about priorities / canids
*** DONE Sample response handler and ping message
** DONE code thread-safe CommandPool (memory pool)
** DONE termination / synchronization
*** DONE mask SIGPIPE signal
*** DONE use counter of still running threads?
*** DONE use atomic usage count for socketfd for clean termination
*** DONE issue shutdown() before close()
** DONE Fix memory leak on exiting tx loop
** DONE add condition variable to pop cmdqueue
** DONE add comment to wait on pop
** DONE Error handling of syscalls
*** DONE check errno as soon as possible, anywhere
** DONE A few Top-level calls (just as example)
*** DONE Top-level calls
*** DONE check count of pending states
** DONE compile
*** DONE write makefile
*** DONE Add semicolons
** DONE Fix makefile to build static lib
** DONE build with -Wall -pendandic -Wextra
** DONE Move workstation
** DONE Improvements
*** DONE API methods hould return state reference parameter
.. in output argument. This requires an additional lock
when the internal state struct is used.
*** DONE fix name field in header
*** DONE put commands in namespace
*** DONE put can level stuff into namespace
*** DONE split methods in initialize() / uninitialize():
   anywhere we allocate memory via the STL, to catch
   out-of-memory exceptions

   Also, thread tghrough the calls of these methods
   up to the top level.
*** DONE compile -Wall
*** DONE Fix CPU hogging
*** DONE fix Python wrapper for grid_state
*** DONE clean up debug messages 
*** DONE Fix encoding of beta step count in both driver and mock_controller
*** DONE fix changed CAN command names (setTicksPerSegment and setStepsPerFrame, also getCounterDeviation)
*** DONE fix message lengths in all version 1 CAN commands, and re-test
*** DONE fix decoding of all CAN commands in mock_controller.py to make it clearer
*** DONE Fix encoding of mock responses (use TX[n] = ... )
*** DONE fix const correctness
*** DONE add PingFPU  command
*** DONE add resetFPU command
*** DONE Add eventfds for new commands and for driver shutdown
*** DONE Add time-outs for commands
*** DONE add response handlers for base commands
*** DONE Clean-up
**** DONE Split declarations and implementations into source files as usual
**** DONE consider: move locus of time-stamping sent command to after termination of sending
**** DONE collect time utility functions into own file
**** DONE replace hand-rolled time function with system standard funcs
*** DONE make signatures const-correct
*** DONE make API const-correct
*** DONE split findDatum into start and wait functions

*** DONE Wrap error returns into Python Exceptions
*** DONE revise expects_response field
*** DONE add Python wrappers for base commands
*** DONE Add tentative CAN responses
**** DONE config_motion
**** DONE ping
**** DONE print frequency of epoll / cond_wait calls
**** DONE solve argument passing of grid_state
**** DONE print invalid responses
*** DONE fix recording of movement direction
*** DONE add mock gateway code for base commands (version 1)
*** DONE fix unnecessary compile warnings
*** DONE check FIXMEs for resolved stuff
*** DONE remove dead code
*** DONE format code nicely using astyle
*** DONE revise initializations of socket and threads
*** DONE Implement ustep errors in mock-up and test handler
*** DONE Bugfix broadast command for more than one bus
*** DONE Lift waveform restriction for zero movement (DEFINE)
*** DONE Update tutorial on allowed waveforms
*** DONE Fix multiplexing of broadcast commands (currently, they are only sent to bus 0)
    One CAN command for each bus needs to be generated,
    not only for each gateway.
    This affects both the serialization code in send_buffer,
    the generation of broadcast commands in the gateway method,
    and the update of pending commands which needs to filter
    by busid.

*** DONE stress tests with multiple FPUs
*** DONE Fix missing exception for beta collision
*** DONE fix branching for driver
*** DONE add datum restriction to firmware protocol
*** DONE Install Scientific Linux or ESO Linux image on kraken
*** DONE Add & test TCP options for socket connection time-outs.
*** DONE Fix detection & reporting of CAN command timeouts
** DONE release 0.5.2
*** DONE revise tutorial
**** DONE Document listing uninitialized angles
**** DONE document separate datum options
**** DONE expand tutorial with reference part 
**** DONE apply spelling corrections to tutorial
**** DONE Tidy up error codes, and list them in tutorial reference
**** DONE List exception hierarchy in tutorial
**** DONE add runnable example scripts
**** DONE review NaN description
**** DONE Add example scripts 
*** DONE Add separate initialised flags for alpha and beta
*** DONE extend list_angles to list uninitialized angles or initialized bit, document that
*** DONE Add alpha/beta selection parameter for datum method
*** DONE clarify requirement for variable MAX_FPU
*** DONE Add time-out for socket connect() call
** DONE release 0.5.3
*** DONE move all driver configuration parameters to const struct
*** DONE Add log levels as discussed
*** DONE add separate reporting/logging of results
** DONE document logging
** DONE 0.5.4: Tutorial, fix description of findDatum option selected_arm
*** DONE replace reference to old version, 
*** DONE proof-read tutorial again
*** DONE add print_function to imports from __future__ everywhere
*** DONE fix swallowing of OBSTACLE_ERROR in finishMotion
** DONE add outstanding features for verification system
*** DONE discern SocketFailure from FPUTimeoutError
*** DONE extend spec to autoDatum and firmwareVersion flags
*** DONE control direction of datum command and add automatic datum flag
**** DONE test denial of auto with firmware < 1.2
**** DONE extend simfirmware to ignore beta, mirror flags
**** DONE test DASEL_ALPHA, DASEL_BOTH
**** DONE test SEARCH_AUTO, SEARCH_CLOCKWISE, SEARCH_ANTI_CLOCKWISE
**** DONE test protection flag (switch off denial)
**** DONE add readRegister command
**** DONE add  readFirmwareVersion command
**** DONE test firmware version in findDatum command
**** DONE document orientation ~ steps in tutorial
**** DONE document new exceptions for ProtectionError, TimeoutError
**** DONE document changes to findDatum
**** DONE document readRegister, getVersionInformation
*** DONE add addressing a subset of FPUs 
*** DONE rename *_BACKWARD to $_REVERSE
*** DONE test AutoDatum
*** DONE pack release 0.6.0
*** DONE add reading/writing serial number
*** DONE change datum reference default
*** DONE add count of allowed freeBetaCollision attempts
*** DONE separate out driver constants (gear ratios)
*** DONE change movement commands (findDatum,executeMotion,freeBetaCollision) so that the ping_ok field is cleared on confirmation
*** DONE update Steven's picture on FPU motor ranges
*** DONE format serial number in printSerialNumbers() with repr()
*** DONE install LMDB on moons-pc01
*** DONE install eigen on moons-pc01
*** DONE read intro into LMDB usage
*** DONE add hook for ping
*** DONE add hook for reset
*** DONE add hook for findDatum
*** DONE add hook for freeBetaCollision
*** DONE add hook for configMotion
*** DONE add hook for executeMotion
*** DONE Add reading the alpha limit switch state from register
*** DONE Add ER_DATUMTO error code
*** DONE add reporting number of movements
*** DONE add reporting of total number of steps
*** DONE fix torn paragraph in state machine description
*** DONE add counters for total number of movements etc
*** DONE add and evaluate error codes for datum time-out / datum rejected because on limit switch
** TODO change default directory for position DB to /var/lib, update documentation
** TODO add "--gateway_address" option to admin tool
** DONE Flash etherCAN gateways with different IPs and MACs
** TODO  clean-up of version 1 code
*** TODO Add state filtering to command precondition check
*** TODO Fix caching in TimeOutList
*** TODO Unit test of TimeOutList
*** DONE run short stress test of firmware with CAN command logging
*** TODO Refactor duplicate code in command header encoding
*** TODO split SBuffer in independent read buffer and write buffer ?   
*** TODO make wording of direction orientation more precise
** TODO Implement CAN Protocol V2
*** TODO clean up protocol document
*** TODO confirm agreement on protocol

* TODO Verification System
** DONE make thorpy driver accessible in python2
*** DONE read protocol for stages we have
*** DONE get java environment
*** DONE get turntable
*** DONE test cli tool
*** DONE [?] Do PySerial experiments
*** DONE Check protocol for turntable / controller
*** TODO fix python library for NR360, parametrize models
** DONE make Thorlabs automation available to Python
     
* TODO Integrate FMA path analysis script into MOONS shared library
** DONE do a git-svn pull of library
** TODO integrate test values into test folder
** TODO convert (r,theta) coordinates to FPU coordinates
   (observing curvature of focal surface)
** TODO extend avoidance model
** TODO do tests



