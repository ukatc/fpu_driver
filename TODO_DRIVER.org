
* TODO Design questions

** TODO subobjects for CAN gateways
** TODO command protocol

** TODO naming of classes
- class for CAN Bus level object GatewayDriver
- class for whole grid of FPUs GridDriver (to avoid clash with Python library)

* TODO code CAN driver

** DONE file preamble
** DONE write class skeleton
- [X] add members
  - [X] state array
  - [X] struct: ready, pending and error counters
  - [X] socket
  - [X] read and write buffers
  - [X] condition variable
  - [X] state mutex
  - [X] sending and receiving threads


- [X] initialisation / constructor / destructor code
  - [X] state array
  - [X] struct: ready, pending and error counters
  - [X] socket
  - [X] read and write buffers
  - [X] condition variable
  - [X] state mutex
  - [X] sending and receiving threads

- [X] state enumeration
** DONE handle byte stuffing better
** DONE socket handling using poll()

** DONE define E_GridState enumeration

** DONE define some Error codes for CAN driver
** DONE look up timing functions

** TODO split off code thread-safe FPUStates Array
*** DONE getGridState method
*** DONE waitForState method
*** DONE getNextTimeOut method
*** DONE CommandID submember
*** DONE state counters
*** DONE addTimeOut method
*** DONE clearTimeOut method
*** DONE Fix wait states and error fields
*** DONE bind result into receive loop
*** TODO write FPUArray::process_timeouts()
*** TODO fix time_spec functions and signatures
*** TODO move locus of time-stamping sent command to after termination of sending
** DONE code thread-safe CommandQueue
*** DONE waitForCommand method
*** DONE getCommandMask
*** DONE pushCommand method
*** DONE popCommand method
** TODO termination / synchronization
*** TODO check errno as soon as possible, anywhere
*** DONE mask SIGPIPE signal
*** TODO use atomic usage count for socketfd for clean termination
*** TODO issue shutdown() before close()
*** TODO use counter of still running threads?
** TODO command interface (draft)
** TODO code thread-safe CommandPool (memory pool)
** TODO response handler interface
*** TODO separate locked operation and reporting/logging of results
** TODO Error handling of syscalls
** TODO split SBuffer in independent read buffer and write buffer
** TODO command serialisation
- [ ] does that need a class and interface?
** DONE define time quantization
** TODO Clean-up
*** TODO collect time utility functions into own file
